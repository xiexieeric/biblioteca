kafka:
    image: spotify/kafka
    container_name: kafka
    environment:
        ADVERTISED_HOST: kafka
        ADVERTISED_PORT: 9092
    hostname: kafka

es:
    image: elasticsearch:2.0
    container_name: es
    ports:
        - "9200:9200"

batch:
    image: tp33/django
    container_name: batch
    volumes:
        - .:/app
    links:
        - kafka:kafka
        - es:es
    command: bash -c "cd batch && python app.py"

models:
    image: tp33/django
    container_name: models
    external_links:
        - mysql:db
    volumes:
        - .:/app
    ports:
        - "8001:8000"
    command: bash -c "cd models && python manage.py makemigrations api && python manage.py migrate && python manage.py loaddata db.json && mod_wsgi-express start-server --working-directory /app/models --reload-on-changes /app/models/models/wsgi.py"

exp:
    image: tp33/django
    container_name: exp
    links:
        - models:models-api
        - kafka:kafka
        - es:es
    volumes:
        - .:/app
    ports:
        - "8002:8000"
    command: bash -c "cd exp && mod_wsgi-express start-server --working-directory /app/exp --reload-on-changes /app/exp/exp/wsgi.py"

web1:
    image: tp33/django
    container_name: web1
    links:
        - exp:exp-api
        - es:es
    volumes:
        - .:/app
    ports:
        - "8003:8000"
    command: bash -c "cd web && mod_wsgi-express start-server --url-alias /static static --working-directory /app/web --reload-on-changes /app/web/web/wsgi.py"

web2:
    image: tp33/django
    container_name: web2
    links:
        - exp:exp-api
        - es:es
    volumes:
        - .:/app
    ports:
        - "8004:8000"
    command: bash -c "cd web && mod_wsgi-express start-server --url-alias /static static --working-directory /app/web --reload-on-changes /app/web/web/wsgi.py"

lb:
    image: haproxy
    container_name: lb
    links:
        - web1:web1
        - web2:web2
    volumes:
        - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    ports:
        - "8000:8000"
