kafka:
    image: spotify/kafka
    container_name: kafka
    environment:
        ADVERTISED_HOST: kafka
        ADVERTISED_PORT: 9092
    hostname: kafka

es:
    image: elasticsearch:2.0
    container_name: es
    ports:
        - "9200:9200"

batch:
    image: tp33/django
    container_name: batch
    volumes:
        - .:/app
    links:
        - kafka:kafka
        - es:es
    command: bash -c "cd /app/batch && python app.py"

batch_click:
    image: tp33/django
    container_name: batch_click
    volumes:
        - .:/app
    links:
        - kafka:kafka
    command: bash -c "cd /app/batch-click && python app.py"

models:
    image: tp33/django
    container_name: models
    external_links:
        - mysql:db
    volumes:
        - .:/app
    ports:
        - "8001:8000"
    command: bash -c "cd models && python manage.py makemigrations api && python manage.py migrate && python manage.py loaddata db.json && mod_wsgi-express start-server --working-directory /app/models --reload-on-changes /app/models/models/wsgi.py"

exp:
    image: tp33/django
    container_name: exp
    links:
        - models:models-api
        - kafka:kafka
        - es:es
    volumes:
        - .:/app
    ports:
        - "8002:8000"
    command: bash -c "cd exp && mod_wsgi-express start-server --working-directory /app/exp --reload-on-changes /app/exp/exp/wsgi.py"

web1:
    image: tp33/django
    container_name: web1
    links:
        - exp:exp-api
        - es:es
    volumes:
        - .:/app
    ports:
        - "8003:8000"
    command: bash -c "cd web && mod_wsgi-express start-server --url-alias /static static --working-directory /app/web --reload-on-changes /app/web/web/wsgi.py"

web2:
    image: tp33/django
    container_name: web2
    links:
        - exp:exp-api
        - es:es
    volumes:
        - .:/app
    ports:
        - "8004:8000"
    command: bash -c "cd web && mod_wsgi-express start-server --url-alias /static static --working-directory /app/web --reload-on-changes /app/web/web/wsgi.py"

lb:
    image: haproxy
    container_name: lb
    links:
        - web1:web1
        - web2:web2
    volumes:
        - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    ports:
        - "8000:8000"

spark-master:
    image: gettyimages/spark
    container_name: spark-master
    hostname: spark-master
    external_links:
        - mysql:db
    environment:
        MASTER: spark://spark-master:7077
        SPARK_CONF_DIR: /conf
    expose:
        - 7001
        - 7002
        - 7003
        - 7004
        - 7005
        - 7006
        - 7077
        - 6066
    ports:
        - 4040:4040
        - 6066:6066
        - 7077:7077
        - 8080:8080
    volumes:
        - ./spark/data:/tmp/data
        - ./spark:/spark
    # command: bash -c "/spark/mysql_setup.sh && /usr/spark-2.2.0/bin/spark-class org.apache.spark.deploy.master.Master -h spark-master"
    command: /usr/spark-2.2.0/bin/spark-class org.apache.spark.deploy.master.Master -h spark-master

spark-worker:
    image: gettyimages/spark
    container_name: spark-worker
    hostname: spark-worker
    external_links:
        - mysql:db
    environment:
        SPARK_CONF_DIR: /conf
        SPARK_WORKER_CORES: 2
        SPARK_WORKER_MEMORY: 512m
        SPARK_WORKER_PORT: 8881
        SPARK_WORKER_WEBUI_PORT: 8081
    links:
        - spark-master
    expose:
        - 7012
        - 7013
        - 7014
        - 7015
        - 7016
        - 8881
    ports:
        - 8081:8081
    volumes:
        - ./spark/data:/tmp/data
        - ./spark:/spark
    # command: bash -c "/spark/mysql_setup.sh && /usr/spark-2.2.0/bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077"
    command: /usr/spark-2.2.0/bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077

